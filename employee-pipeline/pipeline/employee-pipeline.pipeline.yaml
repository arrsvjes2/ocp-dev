apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  labels:
    app: employee-backend
  name: employee-pipeline
spec:
  params:
  - description: url of the git repo for the code of deployment
    name: git-url
    type: string
  - default: main
    description: revision to be used from repo of the code for deployment
    name: git-revision
    type: string
  - description: name of the deployment to be patched
    name: deployment-name
    type: string
  - description: image to be build from the code
    name: backend-image
    type: string
  - description: URL of the maven repository
    name: maven-repo
    type: string
  # <<<< Begin remove from candidate >>>>
  - description: URL of the container registry
    name: registry-url
    type: string
  # <<<< End remove from candidate >>>>
  tasks:
  - name: fetch-source
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    - name: sslVerify
      value: "false"
    - name: verbose
      value: "true"
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
  - name: build-image
    params:
    - name: IMAGE
      value: $(params.backend-image)
    - name: DOCKERFILE
      value: ./src/main/docker/Dockerfile.jvm
    - name: CONTEXT
      value: .
    - name: TLSVERIFY
      value: "false"
    - name: FORMAT
      value: oci
    - name: BUILD_EXTRA_ARGS
      value: "--build-arg REGISTRY_URL=$(params.registry-url)"
    - name: PUSH_EXTRA_ARGS
      value: ""
    - name: SKIP_PUSH
      value: "false"
    runAfter:
    - maven-build
    taskRef:
      kind: ClusterTask
      name: buildah
    workspaces:
    - name: source
      workspace: shared-workspace
  - name: apply-manifests
    params:
    - name: SCRIPT
      value: |-
        oc apply --filename ./src/main/openshift/
        oc wait --for=condition=available --timeout=600s deploymentConfig/$(params.deployment-name)
        echo "-----------Displaying all the pods-----------"
        oc get pods
    - name: VERSION
      value: latest
    runAfter:
    - build-image
    taskRef:
      kind: ClusterTask
      name: openshift-client
    workspaces:
    - name: manifest-dir
      workspace: shared-workspace
  - name: maven-build
    params:
    - name: MAVEN_IMAGE
      # <<<< Begin add to candidate >>>>
      #value: ''
      # <<<< End add to candidate >>>>
      # <<<< Begin remove from candidate >>>>
      value: DYN_REGISTRY_FQDN/ubi9/openjdk-17:latest
      # <<<< End remove from candidate >>>>
    - name: GOALS
      value:
      - '-DskipTests'
      - package
    # <<<< Begin remove from candidate >>>>
    - name: MAVEN_MIRROR_URL
      value: $(params.maven-repo)
    # <<<< End remove from candidate >>>>
    - name: CONTEXT_DIR
      value: .
    runAfter:
    - fetch-source
    taskRef:
      kind: ClusterTask
      name: maven
    workspaces:
    - name: source
      workspace: shared-workspace
    - name: maven-settings
      workspace: shared-workspace
  workspaces:
  - name: shared-workspace
